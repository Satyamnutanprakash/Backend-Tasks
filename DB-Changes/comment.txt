Comment

- The main database tables involved in handling comment data and revisions:
	
	• comment: This table stores basic information about each comment, such as the 
		comment ID, node ID it's associated with, author information, creation time, and 
		status.

	• comment_field_data: This table contains the most recent version of each comment's 
		fields (data), including the actual comment text. Each row corresponds to a comment 
		and includes all its fields.

	• comment_field_revision: This table stores revisions of comment fields. Each time a 
		comment is updated, a new row is added to this table with the updated field values. 
		This allows Drupal to keep track of changes and maintain revision history for 
		comments.

	• comment_revision: This table keeps track of different revisions of comments. Each 
		row corresponds to a revision and points to the corresponding rows in the comment
		and comment_field_revision tables.

	• comment_entity__<field_name>: Similar to nodes, for each field attached to a 
		comment, a separate table exists to store the field's values for each revision. For 
		example, if you have a field called "comment_body" attached to comments, there 
		would be a table named comment_entity__comment_body to store the comment 
		body field values for different revisions.

- When you perform different operations on comments, here's how the tables are affected:

	• Creating a Comment: When you create a new comment, an entry is added to the 
		comment table, and a corresponding entry is added to the comment_field_data table 
		with the initial field values.

	• Updating a Comment: When you update an existing comment, a new entry is added 
		to the comment_revision table, and the relevant fields are updated in the 
		comment_field_revision and corresponding field-specific revision tables.
	
	• Deleting a Comment: When you delete a comment, the corresponding rows in the 
		comment, comment_field_data, comment_revision, and comment_field_revision
		tables are typically marked as deleted or removed from the database.

	• Viewing Revisions: When you view a specific revision of a comment, the 
		comment_field_revision and field-specific revision tables are queried to retrieve the 
		relevant data.

	• Reverting Revisions: If you revert a comment to a previous revision, the necessary 
		data from the revision-specific tables is copied back to the main comment_field_data
		and comment_revision tables.
